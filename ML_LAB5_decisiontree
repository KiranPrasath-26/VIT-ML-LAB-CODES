{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyO0XjWc+/yVHKq7qYol9cmt"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["DECISION TREE - BUY COMPUTER DATASET"],"metadata":{"id":"2Xb3ZZFKPD-z"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"iPLKWpC8GRIw"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.model_selection import train_test_split\n","from sklearn import tree\n","from sklearn.preprocessing import LabelEncoder\n","import graphviz\n","from sklearn.metrics import accuracy_score,confusion_matrix,recall_score,precision_score"]},{"cell_type":"code","source":["data=pd.read_csv(\"Buy_Computer.csv\")\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"3nVZuZLCHBMK","executionInfo":{"status":"ok","timestamp":1664257799747,"user_tz":-330,"elapsed":552,"user":{"displayName":"Kiran Prasath (White Devil)","userId":"16304787254681778993"}},"outputId":"e8ca2e89-2bf0-46d8-8126-7a4eca3b410a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   id         age  income student credit_rating Buy_Computer\n","0   1       youth    high      no          fair           no\n","1   2       youth    high      no     excellent           no\n","2   3  middle_age    high      no          fair          yes\n","3   4      senior  medium      no          fair          yes\n","4   5      senior     low     yes          fair          yes"],"text/html":["\n","  <div id=\"df-525a3534-1b95-4a4a-bce9-144b8d3a7c2f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>age</th>\n","      <th>income</th>\n","      <th>student</th>\n","      <th>credit_rating</th>\n","      <th>Buy_Computer</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>youth</td>\n","      <td>high</td>\n","      <td>no</td>\n","      <td>fair</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>youth</td>\n","      <td>high</td>\n","      <td>no</td>\n","      <td>excellent</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>middle_age</td>\n","      <td>high</td>\n","      <td>no</td>\n","      <td>fair</td>\n","      <td>yes</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>senior</td>\n","      <td>medium</td>\n","      <td>no</td>\n","      <td>fair</td>\n","      <td>yes</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>senior</td>\n","      <td>low</td>\n","      <td>yes</td>\n","      <td>fair</td>\n","      <td>yes</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-525a3534-1b95-4a4a-bce9-144b8d3a7c2f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-525a3534-1b95-4a4a-bce9-144b8d3a7c2f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-525a3534-1b95-4a4a-bce9-144b8d3a7c2f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["data=data.drop(data.columns[0],axis=1)\n","df = data\n","X=data.iloc[:,:-1]\n","y=data.iloc[:,-1]"],"metadata":{"id":"MCm4P9kgIQUK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(X)\n","print(y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TqzsKIRIIa_A","executionInfo":{"status":"ok","timestamp":1664257811559,"user_tz":-330,"elapsed":5,"user":{"displayName":"Kiran Prasath (White Devil)","userId":"16304787254681778993"}},"outputId":"e48c6d23-a388-4aaa-fde8-f119c35da725"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["           age  income student credit_rating\n","0        youth    high      no          fair\n","1        youth    high      no     excellent\n","2   middle_age    high      no          fair\n","3       senior  medium      no          fair\n","4       senior     low     yes          fair\n","5       senior     low     yes     excellent\n","6   middle_age     low     yes     excellent\n","7        youth  medium      no          fair\n","8        youth     low     yes          fair\n","9       senior  medium     yes          fair\n","10       youth  medium     yes     excellent\n","11  middle_age  medium      no     excellent\n","12  middle_age    high     yes          fair\n","13      senior  medium      no     excellent\n","0      no\n","1      no\n","2     yes\n","3     yes\n","4     yes\n","5      no\n","6     yes\n","7      no\n","8     yes\n","9     yes\n","10    yes\n","11    yes\n","12    yes\n","13     no\n","Name: Buy_Computer, dtype: object\n"]}]},{"cell_type":"code","source":["le = LabelEncoder()\n","y=le.fit_transform(y)\n","print(y)\n","X = X.apply(le.fit_transform)\n","print(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"icJgdMirIdI4","executionInfo":{"status":"ok","timestamp":1664257818990,"user_tz":-330,"elapsed":457,"user":{"displayName":"Kiran Prasath (White Devil)","userId":"16304787254681778993"}},"outputId":"77e3b362-9343-4cee-f1b8-50c57fe110ce"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 0 1 1 1 0 1 0 1 1 1 1 1 0]\n","    age  income  student  credit_rating\n","0     2       0        0              1\n","1     2       0        0              0\n","2     0       0        0              1\n","3     1       2        0              1\n","4     1       1        1              1\n","5     1       1        1              0\n","6     0       1        1              0\n","7     2       2        0              1\n","8     2       1        1              1\n","9     1       2        1              1\n","10    2       2        1              0\n","11    0       2        0              0\n","12    0       0        1              1\n","13    1       2        0              0\n"]}]},{"cell_type":"code","source":["xtrain, xtest, ytrain, ytest = train_test_split(X, y, test_size=0.2, random_state=1)\n","print(\"training dataset:\\n\",xtrain,\"\\n\",ytrain)\n","print(\"\\ntesting dataset:\\n\",xtest,\"\\n\",ytest)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fX-DP-YzIo7Z","executionInfo":{"status":"ok","timestamp":1664257823876,"user_tz":-330,"elapsed":4,"user":{"displayName":"Kiran Prasath (White Devil)","userId":"16304787254681778993"}},"outputId":"54a67cd4-00ae-4b4a-b799-fb71a373fd5f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["training dataset:\n","     age  income  student  credit_rating\n","2     0       0        0              1\n","10    2       2        1              0\n","4     1       1        1              1\n","1     2       0        0              0\n","12    0       0        1              1\n","0     2       0        0              1\n","13    1       2        0              0\n","9     1       2        1              1\n","8     2       1        1              1\n","11    0       2        0              0\n","5     1       1        1              0 \n"," [1 1 1 0 1 0 0 1 1 1 0]\n","\n","testing dataset:\n","    age  income  student  credit_rating\n","3    1       2        0              1\n","7    2       2        0              1\n","6    0       1        1              0 \n"," [1 0 1]\n"]}]},{"cell_type":"code","source":["#GINI INDEX\n","dt=tree.DecisionTreeClassifier()\n","model= dt.fit(xtrain,ytrain)\n","ypred=dt.predict(xtest)\n","print(\"the predicted y values: \",ypred)\n","print(\"the test y values: \",ytest)\n","print(\"the score for the training data set is: \",model.score(xtest,ytest))\n","con_mat = confusion_matrix(ytest,ypred)\n","print(\"Confusion matrix: \\n\", con_mat)\n","tree.plot_tree(model)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":508},"id":"wSX1irI9IuUg","executionInfo":{"status":"ok","timestamp":1664257884089,"user_tz":-330,"elapsed":1535,"user":{"displayName":"Kiran Prasath (White Devil)","userId":"16304787254681778993"}},"outputId":"9c68c985-7ad1-4ab7-aa30-c5ebd8f123b6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["the predicted y values:  [0 0 1]\n","the test y values:  [1 0 1]\n","the score for the training data set is:  0.6666666666666666\n","Confusion matrix: \n"," [[1 0]\n"," [1 1]]\n"]},{"output_type":"execute_result","data":{"text/plain":["[Text(0.3333333333333333, 0.9, 'X[0] <= 0.5\\ngini = 0.463\\nsamples = 11\\nvalue = [4, 7]'),\n"," Text(0.16666666666666666, 0.7, 'gini = 0.0\\nsamples = 3\\nvalue = [0, 3]'),\n"," Text(0.5, 0.7, 'X[2] <= 0.5\\ngini = 0.5\\nsamples = 8\\nvalue = [4, 4]'),\n"," Text(0.3333333333333333, 0.5, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n"," Text(0.6666666666666666, 0.5, 'X[3] <= 0.5\\ngini = 0.32\\nsamples = 5\\nvalue = [1, 4]'),\n"," Text(0.5, 0.3, 'X[1] <= 1.5\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.3333333333333333, 0.1, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.6666666666666666, 0.1, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.8333333333333334, 0.3, 'gini = 0.0\\nsamples = 3\\nvalue = [0, 3]')]"]},"metadata":{},"execution_count":11},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#ENTROPY\n","dt=tree.DecisionTreeClassifier(criterion='entropy')\n","model1= dt.fit(xtrain,ytrain)\n","ypred=dt.predict(xtest)\n","print(\"the predicted y values: \",ypred)\n","print(\"the test y values: \",ytest)\n","print(\"the score for the training data set is: \",model1.score(xtest,ytest))\n","con_mat = confusion_matrix(ytest,ypred)\n","print(\"Confusion matrix: \\n\", con_mat)\n","tree.plot_tree(model1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":508},"id":"5XyMcGf6MJvn","executionInfo":{"status":"ok","timestamp":1664257887303,"user_tz":-330,"elapsed":1647,"user":{"displayName":"Kiran Prasath (White Devil)","userId":"16304787254681778993"}},"outputId":"0590fff5-27c2-4944-f393-c119462dddb1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["the predicted y values:  [0 0 1]\n","the test y values:  [1 0 1]\n","the score for the training data set is:  0.6666666666666666\n","Confusion matrix: \n"," [[1 0]\n"," [1 1]]\n"]},{"output_type":"execute_result","data":{"text/plain":["[Text(0.3333333333333333, 0.9, 'X[0] <= 0.5\\nentropy = 0.946\\nsamples = 11\\nvalue = [4, 7]'),\n"," Text(0.16666666666666666, 0.7, 'entropy = 0.0\\nsamples = 3\\nvalue = [0, 3]'),\n"," Text(0.5, 0.7, 'X[2] <= 0.5\\nentropy = 1.0\\nsamples = 8\\nvalue = [4, 4]'),\n"," Text(0.3333333333333333, 0.5, 'entropy = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n"," Text(0.6666666666666666, 0.5, 'X[3] <= 0.5\\nentropy = 0.722\\nsamples = 5\\nvalue = [1, 4]'),\n"," Text(0.5, 0.3, 'X[1] <= 1.5\\nentropy = 1.0\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.3333333333333333, 0.1, 'entropy = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.6666666666666666, 0.1, 'entropy = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.8333333333333334, 0.3, 'entropy = 0.0\\nsamples = 3\\nvalue = [0, 3]')]"]},"metadata":{},"execution_count":12},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["treedata= tree.export_graphviz(model1, out_file=None)\n","graph = graphviz.Source(treedata)\n","# graph.render(\"marks\")\n","graph"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":657},"id":"XA-L1PeoXjB-","executionInfo":{"status":"ok","timestamp":1664258149740,"user_tz":-330,"elapsed":788,"user":{"displayName":"Kiran Prasath (White Devil)","userId":"16304787254681778993"}},"outputId":"7c529cb7-6b26-47b2-fe40-e599165ad4da"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<graphviz.files.Source at 0x7f339a772710>"],"image/svg+xml":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.40.1 (20161225.0304)\n -->\n<!-- Title: Tree Pages: 1 -->\n<svg width=\"351pt\" height=\"477pt\"\n viewBox=\"0.00 0.00 351.00 477.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 473)\">\n<title>Tree</title>\n<polygon fill=\"#ffffff\" stroke=\"transparent\" points=\"-4,4 -4,-473 347,-473 347,4 -4,4\"/>\n<!-- 0 -->\n<g id=\"node1\" class=\"node\">\n<title>0</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"168.5,-469 50.5,-469 50.5,-401 168.5,-401 168.5,-469\"/>\n<text text-anchor=\"middle\" x=\"109.5\" y=\"-453.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">X[0] &lt;= 0.5</text>\n<text text-anchor=\"middle\" x=\"109.5\" y=\"-438.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.946</text>\n<text text-anchor=\"middle\" x=\"109.5\" y=\"-423.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 11</text>\n<text text-anchor=\"middle\" x=\"109.5\" y=\"-408.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [4, 7]</text>\n</g>\n<!-- 1 -->\n<g id=\"node2\" class=\"node\">\n<title>1</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"101,-357.5 0,-357.5 0,-304.5 101,-304.5 101,-357.5\"/>\n<text text-anchor=\"middle\" x=\"50.5\" y=\"-342.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n<text text-anchor=\"middle\" x=\"50.5\" y=\"-327.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 3</text>\n<text text-anchor=\"middle\" x=\"50.5\" y=\"-312.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 3]</text>\n</g>\n<!-- 0&#45;&gt;1 -->\n<g id=\"edge1\" class=\"edge\">\n<title>0&#45;&gt;1</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M90.1812,-400.9465C83.9324,-389.9316 76.9888,-377.6922 70.6793,-366.5703\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"73.5362,-364.513 65.5576,-357.5422 67.4477,-367.967 73.5362,-364.513\"/>\n<text text-anchor=\"middle\" x=\"58.9046\" y=\"-377.9407\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">True</text>\n</g>\n<!-- 2 -->\n<g id=\"node3\" class=\"node\">\n<title>2</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"220,-365 119,-365 119,-297 220,-297 220,-365\"/>\n<text text-anchor=\"middle\" x=\"169.5\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">X[2] &lt;= 0.5</text>\n<text text-anchor=\"middle\" x=\"169.5\" y=\"-334.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 1.0</text>\n<text text-anchor=\"middle\" x=\"169.5\" y=\"-319.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 8</text>\n<text text-anchor=\"middle\" x=\"169.5\" y=\"-304.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [4, 4]</text>\n</g>\n<!-- 0&#45;&gt;2 -->\n<g id=\"edge2\" class=\"edge\">\n<title>0&#45;&gt;2</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M129.1462,-400.9465C134.119,-392.3271 139.5243,-382.9579 144.7148,-373.9611\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"147.844,-375.5409 149.8096,-365.13 141.7807,-372.0428 147.844,-375.5409\"/>\n<text text-anchor=\"middle\" x=\"156.2878\" y=\"-385.5761\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">False</text>\n</g>\n<!-- 3 -->\n<g id=\"node4\" class=\"node\">\n<title>3</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"156,-253.5 55,-253.5 55,-200.5 156,-200.5 156,-253.5\"/>\n<text text-anchor=\"middle\" x=\"105.5\" y=\"-238.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n<text text-anchor=\"middle\" x=\"105.5\" y=\"-223.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 3</text>\n<text text-anchor=\"middle\" x=\"105.5\" y=\"-208.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [3, 0]</text>\n</g>\n<!-- 2&#45;&gt;3 -->\n<g id=\"edge3\" class=\"edge\">\n<title>2&#45;&gt;3</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M148.544,-296.9465C141.6978,-285.8215 134.0829,-273.4473 127.1843,-262.237\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"130.0555,-260.2244 121.8336,-253.5422 124.0939,-263.8931 130.0555,-260.2244\"/>\n</g>\n<!-- 4 -->\n<g id=\"node5\" class=\"node\">\n<title>4</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"292.5,-261 174.5,-261 174.5,-193 292.5,-193 292.5,-261\"/>\n<text text-anchor=\"middle\" x=\"233.5\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">X[3] &lt;= 0.5</text>\n<text text-anchor=\"middle\" x=\"233.5\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.722</text>\n<text text-anchor=\"middle\" x=\"233.5\" y=\"-215.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 5</text>\n<text text-anchor=\"middle\" x=\"233.5\" y=\"-200.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 4]</text>\n</g>\n<!-- 2&#45;&gt;4 -->\n<g id=\"edge4\" class=\"edge\">\n<title>2&#45;&gt;4</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M190.456,-296.9465C195.8155,-288.2373 201.6461,-278.7626 207.2353,-269.6801\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"210.2367,-271.481 212.4969,-261.13 204.2751,-267.8122 210.2367,-271.481\"/>\n</g>\n<!-- 5 -->\n<g id=\"node6\" class=\"node\">\n<title>5</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"224,-157 123,-157 123,-89 224,-89 224,-157\"/>\n<text text-anchor=\"middle\" x=\"173.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">X[1] &lt;= 1.5</text>\n<text text-anchor=\"middle\" x=\"173.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 1.0</text>\n<text text-anchor=\"middle\" x=\"173.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n<text text-anchor=\"middle\" x=\"173.5\" y=\"-96.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 1]</text>\n</g>\n<!-- 4&#45;&gt;5 -->\n<g id=\"edge5\" class=\"edge\">\n<title>4&#45;&gt;5</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M213.8538,-192.9465C208.881,-184.3271 203.4757,-174.9579 198.2852,-165.9611\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"201.2193,-164.0428 193.1904,-157.13 195.156,-167.5409 201.2193,-164.0428\"/>\n</g>\n<!-- 8 -->\n<g id=\"node9\" class=\"node\">\n<title>8</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"343,-149.5 242,-149.5 242,-96.5 343,-96.5 343,-149.5\"/>\n<text text-anchor=\"middle\" x=\"292.5\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n<text text-anchor=\"middle\" x=\"292.5\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 3</text>\n<text text-anchor=\"middle\" x=\"292.5\" y=\"-104.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 3]</text>\n</g>\n<!-- 4&#45;&gt;8 -->\n<g id=\"edge8\" class=\"edge\">\n<title>4&#45;&gt;8</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M252.8188,-192.9465C259.0676,-181.9316 266.0112,-169.6922 272.3207,-158.5703\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"275.5523,-159.967 277.4424,-149.5422 269.4638,-156.513 275.5523,-159.967\"/>\n</g>\n<!-- 6 -->\n<g id=\"node7\" class=\"node\">\n<title>6</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"165,-53 64,-53 64,0 165,0 165,-53\"/>\n<text text-anchor=\"middle\" x=\"114.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n<text text-anchor=\"middle\" x=\"114.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n<text text-anchor=\"middle\" x=\"114.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 0]</text>\n</g>\n<!-- 5&#45;&gt;6 -->\n<g id=\"edge6\" class=\"edge\">\n<title>5&#45;&gt;6</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M152.6988,-88.9777C147.3242,-80.187 141.5265,-70.7044 136.1115,-61.8477\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"139.0564,-59.9545 130.854,-53.2485 133.0842,-63.6059 139.0564,-59.9545\"/>\n</g>\n<!-- 7 -->\n<g id=\"node8\" class=\"node\">\n<title>7</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"284,-53 183,-53 183,0 284,0 284,-53\"/>\n<text text-anchor=\"middle\" x=\"233.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n<text text-anchor=\"middle\" x=\"233.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n<text text-anchor=\"middle\" x=\"233.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1]</text>\n</g>\n<!-- 5&#45;&gt;7 -->\n<g id=\"edge7\" class=\"edge\">\n<title>5&#45;&gt;7</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M194.6538,-88.9777C200.1195,-80.187 206.0154,-70.7044 211.5222,-61.8477\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"214.5609,-63.5889 216.8688,-53.2485 208.6163,-59.8927 214.5609,-63.5889\"/>\n</g>\n</g>\n</svg>\n"},"metadata":{},"execution_count":17}]}]}